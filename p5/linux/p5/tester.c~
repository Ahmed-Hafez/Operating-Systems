/*#include <stdio.h>
#include "udp.h"
#include "mfs.h"
#include <sys/stat.h>

#define BUFFER_SIZE (4096)
char buffer[BUFFER_SIZE];

int
main(int argc, char *argv[])
{
  //struct stat statbuf;
  //if(stat(dirname(argv[1], &statbuf) !=-1){

  struct stat statbuf;
  if (stat(argv[1], &statbuf) != -1){
    printf("st_ino: %d\n",(int) statbuf.st_ino);
    printf("st_mode: %d\n",(int)statbuf.st_mode);
    printf("st_dev: %d\n",(int)statbuf.st_dev);
    printf("st_nlink: %d\n",(int)statbuf.st_nlink);
    printf("st_size: %d\n",(int)statbuf.st_size);

    
  }
  return 0;
}
*/
#include <stdio.h>
#include "udp.h"
#include "mfs.h"

#define BUFFER_SIZE (4096)
char buffer[BUFFER_SIZE];

int
main(int argc, char *argv[])
{
  char *retBuffer = malloc(4096);
  int rc = MFS_Read(1, retBuffer,0);
  printf("rc: |%d|\n", rc);
  printf("retBuffer: |%s|\n", retBuffer);
  
  //assert(strcmp(retBuffer, sendBuffer) ==0);
 int i; 
 for(i =0; i < MFS_BLOCK_SIZE; i++){
   //   assert(retBuffer[i] == sendBuffer[i]);
 }
  /*
  char stringToWrite[8192];
 
  for(i = 0; i < 400; i++){
    sprintf(stringToWrite + strlen(stringToWrite), "i is:%d\n", i);
  }
  printf("stringToWrite: |%s|\n", stringToWrite);
  rc = MFS_Write(1, stringToWrite,2);
  assert(rc == 0);
  
  //char *retBuffer = malloc(4096);
  rc = MFS_Read(1, retBuffer,2);
   assert(strcmp(retBuffer, stringToWrite) ==0);
  
  printf("rc: |%d|\n", rc);
  printf("retBuffer: |%s|\n", retBuffer);
  //assert(rc == 0);
  */
  //rc = MFS_Unlink(0, "test\0");
  rc = MFS_Unlink(0, "test2\0");
  rc = MFS_Unlink(0, "test\0");
  printf("RC:%d\n", rc);
  rc = MFS_Shutdown();
  printf("end");
  return 0;
}


